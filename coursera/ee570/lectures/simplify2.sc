(define (simplify-+ e)
 (case (- (length e) 1)
  ((0) 0)
  ((1) (simplify (second e)))
  ((2) (let ((e1 (simplify (second e)))
	     (e2 (simplify (third e))))
	(cond ((eqv? e1 0) e2)
	      ((eqv? e2 0) e1)
	      (else `(+ ,e1 ,e2)))))
  (else (simplify `(+ ,(second e) (+ ,@(rest (rest e))))))))

(define (simplify-- e)
 (case (- (length e) 1)
  ((0) (panic "Invalid expression"))
  ((1) (simplify `(* -1 ,(second e))))
  ((2) (simplify `(+ ,(second e) (- ,(third e)))))
  (else (simplify `(- ,(second e) (+ ,@(rest (rest e))))))))

(define (simplify-* e)
 (case (- (length e) 1)
  ((0) 1)
  ((1) (simplify (second e)))
  ((2) (let ((e1 (simplify (second e)))
	     (e2 (simplify (third e))))
	(cond ((eqv? e1 0) 0)
	      ((eqv? e2 0) 0)
	      ((eqv? e1 1) e2)
	      ((eqv? e2 1) e1)
	      (else `(* ,e1 ,e2)))))
  (else (simplify `(* ,(second e) (* ,@(rest (rest e))))))))

(define (simplify-/ e)
 (case (- (length e) 1)
  ((0) (panic "Invalid expression"))
  ((1) (simplify `(expt ,(second e) -1)))
  ((2) (simplify `(* ,(second e) (/ ,(third e)))))
  (else (simplify `(/ ,(second e) (* ,@(rest (rest e))))))))

(define (simplify-expt e)
 (if (= (- (length e) 1) 2)
     (let ((e1 (simplify (second e)))
	   (e2 (simplify (third e))))
      (if (eqv? e2 1) e1 `(expt ,e1 ,e2)))
     (panic "Invalid expression")))

(define (simplify-sqrt e)
 (if (= (- (length e) 1) 1)
     (simplify `(expt ,(second e) 0.5))
     (panic "Invalid expression")))

(define (constant? e)
 (cond ((number? e) #t)
       ((symbol? e) #f)
       ((and (list? e) (not (null? e)))
	(case (first e)
	 ((+) (every constant? (rest e)))
	 ((-) (every constant? (rest e)))
	 ((*) (every constant? (rest e)))
	 ((/) (every constant? (rest e)))
	 ((expt) (every constant? (rest e)))
	 ((sqrt) (every constant? (rest e)))
	 (else (panic "Invalid expression"))))
       (else (panic "Invalid expression"))))

(define (simplify e)
 (cond ((number? e) e)
       ((constant? e) (calculate e))
       ((symbol? e) e)
       ((and (list? e) (not (null? e)))
	(case (first e)
	 ((+) (simplify-+ e))
	 ((-) (simplify-- e))
	 ((*) (simplify-* e))
	 ((/) (simplify-/ e))
	 ((expt) (simplify-expt e))
	 ((sqrt) (simplify-sqrt e))
	 (else (panic "Invalid expression"))))
       (else (panic "Invalid expression"))))
