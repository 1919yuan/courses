(define (derivative e)
 (define (derivative-+ e)
  `(+ ,(derivative (second e)) ,(derivative (third e))))
 (define (derivative-* e)
  `(+ (* ,(second e) ,(derivative (third e)))
      (* ,(third e) ,(derivative (second e)))))
 (define (derivative-expt e)
  (if (number? (third e))
      `(* ,(derivative (second e))
	  (* ,(third e) (expt ,(second e) ,(- (third e) 1))))
      (panic "Can't handle non-constant exponents")))
 (define (derivative e)
  (cond ((number? e) 0)
	((symbol? e) (if (eq? e 'x) 1 0))
	((and (list? e) (not (null? e)))
	 (case (first e)
	  ((+) (derivative-+ e))
	  ((*) (derivative-* e))
	  ((expt) (derivative-expt e))
	  (else (panic "Invalid expression"))))
	(else (panic "Invalid expression"))))
 (simplify (derivative (simplify e))))
